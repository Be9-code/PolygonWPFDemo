<Window x:Class="PolygonWPFDemo.PolygonWPFDemoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PolygonWPFDemo"
        xmlns:PGonControls="clr-namespace:PolygonWPFDemo.Controls"
        mc:Ignorable="d"
        Title="Polygon WPF Demo" 
		Height="540" Width="1100"
		FontSize="14" FontFamily="Arial" FontWeight="Bold"
		Background="#FF303030"
		KeyDown="OnWindow_KeyDown" Closing="Window_Closing" 
		WindowStartupLocation="CenterScreen" Loaded="Window_Loaded"
        Icon="/PolygonWPFDemo;component/Images/Polygon.png"
		>

	<Window.Resources>
		<Storyboard x:Name="PopupFader" x:Key="PopupFader" Completed="PopupFader_Completed">
			<DoubleAnimation Storyboard.TargetName="MessagePopup" 
				Storyboard.TargetProperty="Opacity" From="0.7" To="0" BeginTime="0:0:0"  Duration="0:0:2">
				<DoubleAnimation.EasingFunction>
					<ExponentialEase Exponent="10" EasingMode="EaseIn" />
				</DoubleAnimation.EasingFunction>
			</DoubleAnimation>
		</Storyboard>
		<Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
			<Setter Property="Margin" Value="0,0,0,0" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Background" Value="Black" />
			<Setter Property="BorderBrush" Value="Black" />
			<Setter Property="BorderThickness" Value="1" />
			<Style.Triggers>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Foreground" Value="Black" />
					<Setter Property="Background" Value="LightBlue" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style TargetType="{x:Type ComboBox}">
			<Setter Property="Background" Value="WhiteSmoke" />
			<Setter Property="Foreground" Value="Black" />
			<Setter Property="FontSize" Value="13" />
			<Setter Property="FontFamily" Value="Arial" />
			<Setter Property="FontWeight" Value="DemiBold" />
			<Setter Property="ToolTip" Value="Select symbol (or hit Enter when symbol is already selected) to Subscribe, double-click to Remove" />
		</Style>
		<Style TargetType="{x:Type ContextMenu}">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContextMenu}">
						<Border BorderThickness="1" CornerRadius="6" BorderBrush="Black" x:Name="Border" Background="Black">
							<StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter TargetName="Border" Property="Background" Value="Black" />
								<Setter Property="Foreground" Value="White" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<ContextMenuService.ContextMenu>
		<ContextMenu x:Name="DemoWindowContextMenu" 
			Width="Auto" Height="Auto"
			Background="#FF303030" Foreground="LightBlue"
			HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
			DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" >
			<MenuItem Header="Subscribtion Presets">
				<MenuItem Header="Equities Preset Symbols" Click="OnSubscribeEquitiesPresets" Style="{StaticResource MenuItemStyle}" />
				<MenuItem Header="Forex Preset Symbols" Click="OnSubscribeForexPresets" Style="{StaticResource MenuItemStyle}" />
				<MenuItem Header="Crypto Preset Symbols" Click="OnSubscribeCryptoPresets" Style="{StaticResource MenuItemStyle}" />
			</MenuItem>
			<MenuItem Header="UnSubscribe All" Click="UnSubscribeAll" />
			<MenuItem Header="UnSubscribe All Equities" Click="UnSubscribeAllEquities" />
			<MenuItem Header="UnSubscribe All Forex" Click="UnSubscribeAllForex" />
			<MenuItem Header="UnSubscribe All Crypto" Click="UnSubscribeAllCrypto" />
			<MenuItem Header="Save Config" Click="OnSaveConfig" />
		</ContextMenu>
	</ContextMenuService.ContextMenu>

	<Grid x:Name="LayoutRoot" Margin="0,0,0,0">
		<Grid.RowDefinitions>
			<RowDefinition Height="50" />
			<RowDefinition Height="400" />
			<RowDefinition Height="0" />
			<RowDefinition Height="40" />
		</Grid.RowDefinitions>

		<!--Top Buttons-->
		<Grid Margin="40,0,38,400" Grid.Row="0" Grid.RowSpan="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="85" />
				<ColumnDefinition Width="120" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="160" />
			</Grid.ColumnDefinitions>

			<!--JSON/Class Values radio buttons-->
			<RadioButton x:Name="UseJSONText" Grid.Column="0" Content="JSON"
				Margin="14,15,14.2,15.2"
				Foreground="White"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				ToolTip="Click to see JSON text"
				GroupName="Group1" Checked="JSONText_Checked" Height="15" Width="57"
				/>

			<RadioButton x:Name="UseClassValues" Grid.Column="1" Content="Class values"
				Foreground="LightSteelBlue"
				HorizontalAlignment="Center"
				VerticalAlignment="Center" Margin="3.8,15,12.6,15.2"
				ToolTip="Click to see deserialized values"
				GroupName="Group1" Checked="ClassValues_Checked"
				IsChecked="True" Height="15" Width="104"
				/>

			<!--Channels & Symbols-->
			<Grid Grid.Column="2" HorizontalAlignment="Left" Margin="30,5,0,0.2" >
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="160" />
					<ColumnDefinition Width="180" />
					<ColumnDefinition Width="180" />
				</Grid.ColumnDefinitions>

				<Grid Grid.Column="0" HorizontalAlignment="Left" Margin="5.4,1,0,0.2" >
					<Label Content="Equities:"
						Foreground="White"
						HorizontalAlignment="Left" Margin="0,7,0,0" 
						VerticalAlignment="Top"
						/>
					<ComboBox x:Name="EquitiesCBox"
						HorizontalAlignment="Center" Height="Auto" Margin="80,6,0,12.4" 
						Text="" 
						VerticalAlignment="Center" Width="70" 
						ToolTip="Select symbol (or hit Enter when symbol is already selected) to Subscribe, double-click to Remove"
						IsEditable="True" 
						KeyDown="OnClusterComboBoxKeyDown" 
						SelectionChanged="OnClusterComboBoxSelectionChanged" 
						MouseDoubleClick="ClusterComboBoxMouseDoubleClick" 
						DropDownClosed="OnClusterComboBoxDropDownClosed" 
						/>
				</Grid>

				<Grid Grid.Column="1" HorizontalAlignment="Left" Margin="5.4,1,0,0.2" >
					<Label Content="Forex:"
						Foreground="White"
						HorizontalAlignment="Left" Margin="0,7,0,0" 
						VerticalAlignment="Top"
						/>
					<ComboBox x:Name="ForexCBox"
						HorizontalAlignment="Center" Height="Auto" Margin="60,6,0,12.4" 
						Text="" 
						VerticalAlignment="Center" Width="100" 
						ToolTip="Select symbol (or hit Enter when symbol is already selected) to Subscribe, double-click to Remove"
						IsEditable="True" 
						KeyDown="OnClusterComboBoxKeyDown" 
						SelectionChanged="OnClusterComboBoxSelectionChanged" 
						MouseDoubleClick="ClusterComboBoxMouseDoubleClick" 
						DropDownClosed="OnClusterComboBoxDropDownClosed" 
						/>
				</Grid>

				<Grid Grid.Column="2" HorizontalAlignment="Left" Margin="5.4,1,0,0.2">
					<Label Content="Crypto:"
						Foreground="White"
						HorizontalAlignment="Left" Margin="0,7,0,0" 
						VerticalAlignment="Top"
						/>
					<ComboBox x:Name="CryptoCBox"
						HorizontalAlignment="Center" Height="Auto" Margin="70,6,0,12.4" 
						Text="" 
						VerticalAlignment="Center" Width="100" 
						IsEditable="True" 
						KeyDown="OnClusterComboBoxKeyDown" 
						SelectionChanged="OnClusterComboBoxSelectionChanged" 
						MouseDoubleClick="ClusterComboBoxMouseDoubleClick" 
						DropDownClosed="OnClusterComboBoxDropDownClosed" 
						/>
				</Grid>
			</Grid>

			<!--Api Key-->
			<Grid Grid.Column="3" Background="Transparent" HorizontalAlignment="Left" 
				Margin="40,10,5,0.2" Width="160">
				<Label x:Name="ApiKeyText" Content="Api Key:"
					Background="Transparent" Foreground="LightSteelBlue" Margin="0,5,22.6,0" 
					VerticalAlignment="Top"
					ToolTip="Click to Enter or paste your API key" 
					MouseLeftButtonUp="ApiKey_MouseLeftButtonUp"
					/>
				<Image x:Name="ApiKeyImage" Source="Images\Key.png"
					HorizontalAlignment="Left" Height="35" Margin="80,0,0,12.4" 
					VerticalAlignment="Center" Width="30" 
					ToolTip="Click to Enter or paste your API key" 
					MouseLeftButtonUp="ApiKey_MouseLeftButtonUp"
					/>
			</Grid>

		</Grid>

		<!--Text Display-->
		<Grid x:Name="TextGrid" Grid.Row="1" Margin="0,-2,0,0">
			<Grid.RowDefinitions>
				<RowDefinition Height="400" />
			</Grid.RowDefinitions>

			<!--Text-->
			<TextBox x:Name="AppTextBox" Grid.Row="0"
				HorizontalAlignment="Center" Height="400" Margin="0,0,0,0" 
                VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"
				AcceptsReturn="True"
				Background="Transparent" Foreground="White"
                Text="" VerticalAlignment="Top" Width="1020" 
				FontSize="14" FontFamily="Arial" FontWeight="Normal"
				ToolTip="DoubleClick on text display to clear text" 
				MouseDoubleClick="AppTextBox_MouseDoubleClick"
				/>

		</Grid>

		<!--Realtime Data-->
		<ScrollViewer x:Name="RTDataScroll" Grid.Row="2"
				VerticalScrollBarVisibility="Auto" Width="Auto"
				BorderThickness="0" Background="Transparent" 
				>
			<Grid x:Name="RTDataControlsGrid" Height="200" Margin="33,5,0,0.2"  
				HorizontalAlignment="Center">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<PGonControls:RTEquitiesData x:Name="EquitiesRTData" Grid.Row="0" Visibility="Collapsed" />
				<PGonControls:RTForexData x:Name="ForexRTData" Grid.Row="1" Visibility="Collapsed" />
				<PGonControls:RTCryptoData x:Name="CryptoRTData" Grid.Row="2" Visibility="Collapsed" />

			</Grid>
		</ScrollViewer>

		<!--Lower Buttons-->
		<Grid  Margin="0,10,0,0" HorizontalAlignment="Center" Grid.Row="3">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="375" />
				<ColumnDefinition Width="125" />
				<ColumnDefinition Width="125" />
			</Grid.ColumnDefinitions>

			<Border x:Name="SimulationBorder"
				BorderBrush="DodgerBlue"
				BorderThickness="0"
				HorizontalAlignment="Stretch"
				Margin="1,0,1,1"
				VerticalAlignment="Stretch" Width="Auto">
				<Grid Margin="0,0,0,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="125" />
						<ColumnDefinition Width="125" />
						<ColumnDefinition Width="125" />
					</Grid.ColumnDefinitions>

					<Button x:Name="StartButton" Content="Start" Grid.Column="0"
						HorizontalAlignment="Center" Margin="0,2,0,0"
						ToolTip="Hint: use to start/stop streaming or simulation"
						VerticalAlignment="Center" Width="75" Height="25" 
						Click="StartButtonButton_Click" IsDefault="True"/>

					<Button x:Name="RestartButton" Content="Restart" Grid.Column="1"
						HorizontalAlignment="Center" Margin="10,2,0,0"
						ToolTip="Hint: use CtrlKey to start/stop simulation mode"
						VerticalAlignment="Center" Width="75" Height="25" Click="RestartButton_Click"/>

					<CheckBox x:Name="Simulation" Content="Simulation" Grid.Column="2"
						Foreground="White"
						HorizontalAlignment="Center" Margin="10,10,0,0"
						ToolTip="Hint: use Go button to start/pause simulation mode"
						VerticalAlignment="Top" Width="100" Height="25" Click="Simulation_Click"/>
				</Grid>
			</Border>

			<Button x:Name="RTDataButton" Content="RT Data" Grid.Column="1"
					HorizontalAlignment="Center" Margin="10,0,0,0"
					VerticalAlignment="Center" Width="75" Height="25" 
					ToolTip="Toggle display of realtime data"
					Click="ToggleRTDataButton_Click"/>

			<Button x:Name="ExitButton" Content="Exit" Grid.Column="3"
					HorizontalAlignment="Center" Margin="10,0,0,0"
					ToolTip="Hint: Escape will close the window"
					VerticalAlignment="Center" Width="75" Height="25" Click="ExitButton_Click"/>
		</Grid>

		<Popup x:Name="MessagePopup" 
			VerticalOffset="20"
			HorizontalOffset="20" 
			Placement="Center"
			PlacementTarget = "{Binding ElementName = AppTextBox}"
			PopupAnimation="Fade"
			AllowsTransparency="True">
			<TextBlock Name="PopupText"
				Foreground="#FF303030"
				FontSize="16" FontFamily="Arial" FontWeight="Bold"
				Width="Auto"
				TextWrapping="Wrap">
			</TextBlock>
		</Popup>

	</Grid>

</Window>
